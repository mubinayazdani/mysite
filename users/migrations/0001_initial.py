# Generated by Django 5.0.1 on 2024-02-25 09:01

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('is_valid', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(help_text='Required 15 characters or fewer starting with a letter! ', max_length=15, unique=True, validators=[django.core.validators.RegexValidator('^[a-zA-z][a-zA-Z0-9_\\.]+$', 'Enter a valid username.', 'this may contains letterrs', 'invalid')], verbose_name='Username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='First name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='Last name')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='Email adress')),
                ('phone_number', models.BigIntegerField(blank=True, null=True, unique=True, validators=[django.core.validators.RegexValidator('^989[0-3,9]\\d{8}$', 'Enter a valid mobiile number!')], verbose_name='Mobile number')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site. ', verbose_name='Is staff')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active', verbose_name='Active')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_uuid', models.UUIDField(null=True, verbose_name='Device UUID')),
                ('device_type', models.PositiveSmallIntegerField(choices=[(1, 'web'), (2, 'ios'), (3, 'android')], default=3)),
                ('device_os', models.CharField(blank=True, max_length=50, verbose_name='Device os')),
                ('device_model', models.CharField(blank=True, max_length=50, verbose_name='Device model')),
                ('app_version', models.CharField(blank=True, max_length=50, verbose_name='App version')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deevices', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'device',
                'verbose_name_plural': 'devices',
                'db_table': 'user_devices',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nick_name', models.CharField(blank=True, max_length=50, verbose_name='Nick name')),
                ('avatar', models.ImageField(blank=True, upload_to='', verbose_name='Image Fields')),
                ('bithday', models.DateField(blank=True, null=True, verbose_name='Birthday')),
                ('gender', models.BooleanField(help_text='female is false, male is true, null is unset.', null=True, verbose_name='Gender')),
                ('provience', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.province', verbose_name='Province')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'profile',
                'verbose_name_plural': 'profiles',
                'db_table': 'user_profiles',
            },
        ),
    ]
